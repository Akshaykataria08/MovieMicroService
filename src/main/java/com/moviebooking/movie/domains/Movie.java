package com.moviebooking.movie.domains;

import java.time.Duration;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.stream.Collectors;

import org.apache.commons.text.WordUtils;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.moviebooking.movie.enums.Genre;
import com.moviebooking.movie.enums.Language;
import com.moviebooking.movie.utils.DurationStringTypeConverter;
import com.moviebooking.movie.utils.GenreEnumListTypeConverter;
import com.moviebooking.movie.utils.LanguageEnumListTypeConverter;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@DynamoDBTable(tableName = "Movie")
public class Movie {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String movieId;

	@DynamoDBAttribute
	@EqualsAndHashCode.Include
	private String movieName;

	@DynamoDBAttribute
	private Double rating;

	@DynamoDBAttribute
	@EqualsAndHashCode.Include
	private List<String> cast = new ArrayList<String>();

	@DynamoDBAttribute
	@EqualsAndHashCode.Include
	private Calendar releaseDate;

	@DynamoDBTypeConverted(converter = DurationStringTypeConverter.class)
	private Duration duration;

	@DynamoDBTypeConverted(converter = LanguageEnumListTypeConverter.class)
	private List<Language> languages = new ArrayList<Language>();

	@DynamoDBTypeConverted(converter = GenreEnumListTypeConverter.class)
	private List<Genre> genres = new ArrayList<Genre>();

	public void setMovieName(String movieName) {
		this.movieName = WordUtils.capitalizeFully(movieName);
	}

	public void setCast(List<String> cast) {
		this.cast = cast.stream().map(castName -> WordUtils.capitalizeFully(castName)).collect(Collectors.toList());
	}
}
